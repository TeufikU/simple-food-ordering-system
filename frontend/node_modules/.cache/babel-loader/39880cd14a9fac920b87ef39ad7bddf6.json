{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\simple-food-ordering-system\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\simple-food-ordering-system\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\simple-food-ordering-system\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\simple-food-ordering-system\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\simple-food-ordering-system\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\simple-food-ordering-system\\\\frontend\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport RestaurantsList from './RestaurantsList';\nimport Divider from '@material-ui/core/Divider';\nimport jwt_decode from 'jwt-decode';\nimport { getRestaurants } from './Services';\nimport ReactDOM from 'react-dom';\nimport OrderPanels from './OrderPanels';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this));\n    _this.state = {\n      fullname: '',\n      email: '',\n      restaurants: [],\n      openedRestaurants: [],\n      user: []\n    };\n    return _this;\n  }\n  /*If dashboard is loaded then lets save a user data to local storage for later, so we know that the user is logged in*/\n\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('usertoken') !== null) {\n        var token = localStorage.usertoken;\n        var decoded = jwt_decode(token);\n        this.setState({\n          user: {\n            fullname: decoded.fullname,\n            email: decoded.email\n          }\n        });\n      }\n\n      var restaurants = {\n        name: '',\n        location: '',\n        workinghours: '' //Getting the restaurants list from MongoDb\n\n      };\n      getRestaurants(restaurants).then(function (response) {\n        if (response) {\n          _this2.setState({\n            restaurants: response\n          });\n        }\n      });\n    }\n  }, {\n    key: \"createFoodOrder\",\n    value: function createFoodOrder(restaurantData) {\n      if (!this.state.openedRestaurants.includes(restaurantData)) {\n        this.state.openedRestaurants.push(restaurantData);\n      }\n\n      var element = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(OrderPanels, {\n        openedRestaurants: this.state.openedRestaurants,\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n      ReactDOM.render(element, document.getElementById('panels'));\n    }\n    /*Render DOM elements only if user is logged in, instead of that lets prompt that user needs to be logged in to view dashboard page*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (localStorage.getItem('usertoken') !== null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Navbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"sidebar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"textAlignCenter bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Restaurants\"), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(RestaurantsList, {\n          restaurants: this.state.restaurants,\n          createFoodOrder: this.createFoodOrder.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"panels\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"globalMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"You must me logged in to view this page!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Go to login page\"), React.createElement(Link, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Login\")));\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\Users\\User\\simple-food-ordering-system\\frontend\\src\\components\\Dashboard.js"],"names":["React","Component","Button","Link","Navbar","RestaurantsList","Divider","jwt_decode","getRestaurants","ReactDOM","OrderPanels","BrowserRouter","Router","Dashboard","state","fullname","email","restaurants","openedRestaurants","user","localStorage","getItem","token","usertoken","decoded","setState","name","location","workinghours","then","response","restaurantData","includes","push","element","render","document","getElementById","createFoodOrder","bind"],"mappings":"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","sourcesContent":["    import React, { Component } from 'react'\r\n    import Button from '@material-ui/core/Button';\r\n    import { Link } from 'react-router-dom';\r\n    import Navbar from './Navbar';\r\n    import RestaurantsList from './RestaurantsList';\r\n    import Divider from '@material-ui/core/Divider';\r\n    import jwt_decode from 'jwt-decode'\r\n    import { getRestaurants } from './Services'\r\n    import ReactDOM from 'react-dom';\r\nimport OrderPanels from './OrderPanels';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n    class Dashboard extends Component {\r\n\r\n        constructor() {\r\n            super()\r\n            this.state = {\r\n                fullname: '',\r\n                email: '',\r\n                restaurants:[],\r\n                openedRestaurants:[],\r\n                user:[]\r\n            }\r\n        }\r\n\r\n        /*If dashboard is loaded then lets save a user data to local storage for later, so we know that the user is logged in*/\r\n        componentDidMount () {\r\n            if(localStorage.getItem('usertoken')!==null){\r\n            const token = localStorage.usertoken\r\n            const decoded = jwt_decode(token)\r\n            this.setState({user:{\r\n                fullname: decoded.fullname,\r\n                email: decoded.email,\r\n                } \r\n            })\r\n        }\r\n        \r\n        const restaurants=\r\n        {\r\n            name:'',\r\n            location: '',\r\n            workinghours: ''\r\n        }\r\n        //Getting the restaurants list from MongoDb\r\n        getRestaurants(restaurants).then(response => {\r\n            if (response) {\r\n                this.setState({restaurants:response})\r\n            }\r\n        }) \r\n    }\r\n\r\n        createFoodOrder (restaurantData) {\r\n            if(!this.state.openedRestaurants.includes(restaurantData)){\r\n                this.state.openedRestaurants.push(restaurantData)\r\n        }\r\n            const element = (\r\n                <React.Fragment>\r\n                <OrderPanels openedRestaurants={this.state.openedRestaurants} user={this.state.user}/>\r\n                </React.Fragment>\r\n          );\r\n          ReactDOM.render(element, document.getElementById('panels'));  \r\n        }\r\n\r\n        /*Render DOM elements only if user is logged in, instead of that lets prompt that user needs to be logged in to view dashboard page*/\r\n        render () {\r\n            if(localStorage.getItem('usertoken')!==null){\r\n            return (\r\n            <div><Navbar />\r\n            <div className=\"sidebar\">\r\n            <h2 className=\"textAlignCenter bold\">Restaurants</h2>\r\n            <Divider />\r\n            <RestaurantsList restaurants={this.state.restaurants} createFoodOrder={this.createFoodOrder.bind(this)}/>\r\n            </div>\r\n            <div id=\"panels\"></div>\r\n            </div>   \r\n            )}else{\r\n                return(\r\n                    <div className=\"globalMessage\">\r\n                    <h1>You must me logged in to view this page!</h1> \r\n                    <p>Go to login page</p>\r\n                    <Link to=\"/login\"><Button variant=\"contained\" color=\"primary\">Login</Button></Link>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    export default Dashboard"]},"metadata":{},"sourceType":"module"}